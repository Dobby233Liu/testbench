name: Build Ren'Py project for Android

on: [push, workflow_dispatch]

env:
  RENPY_VERSION: 7.4.6
  KEY_CN: Dobby233Liu

jobs:
  android:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: Dobby233Liu/renpy-SideProj
          
      - uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 8
      - name: Install packages
        run: sudo apt-get install --yes bzip2 wget libxext6 libllvm6.0 mesa-utils

      - name: Setup Ren'Py SDK
        working-directory: ..
        run: |
          sdk_name=renpy-${{ env.RENPY_VERSION }}
          wget -q https://www.renpy.org/dl/${{ env.RENPY_VERSION }}/${sdk_name}-sdk.tar.bz2
          tar -xf ./${sdk_name}-sdk.tar.bz2
          rm ./${sdk_name}-sdk.tar.bz2
          cd ./${sdk_name}-sdk
          wget -q https://www.renpy.org/dl/${{ env.RENPY_VERSION }}/${sdk_name}-rapt.zip
          unzip -q ./${sdk_name}-rapt.zip
          rm ./${sdk_name}-rapt.zip
      - name: Setup RAPT (part 1)
        working-directory: ../renpy-${{ env.RENPY_VERSION }}-sdk/rapt
        run: 
          keytool -genkey -keystore android.keystore -alias android -keyalg RSA -keysize 2048 -keypass android -storepass android -dname CN=${{ env.KEY_CN }} -validity 20000
      - name: Prepare Python
        working-directory: ../renpy-${{ env.RENPY_VERSION }}-sdk
        run: |
          echo "$(pwd)/lib/linux-x86_64" >> $GITHUB_PATH
          echo "$(pwd)/lib/python2.7" >> $GITHUB_PATH
      - name: Setup RAPT (part 2)
        working-directory: ../renpy-${{ env.RENPY_VERSION }}-sdk/rapt
        shell: python
        run: |
          import os, sys

          basepath = os.getcwd()

          sys.path.insert(0, os.path.join(basepath, 'buildlib'))
          import rapt
          import rapt.build
          import rapt.plat
          import rapt.install_sdk
          rapt.plat.renpy = True

          rapt.build.copy_project(False)
          rapt.install_sdk.set_property("key.alias", "android")
          rapt.install_sdk.set_property("key.store.password", "android")
          rapt.install_sdk.set_property("key.alias.password", "android")
          rapt.install_sdk.set_property("key.store", os.path.join(basepath, "android.keystore"))
          rapt.install_sdk.set_property("sdk.dir", os.environ["ANDROID_SDK_ROOT"], replace=True)

      - name: Install Android SDK
        working-directory: ../renpy-${{ env.RENPY_VERSION }}-sdk/rapt
        run: |
          yes | sudo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --update
          yes | sudo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses 1> /dev/null
          yes | sudo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-29" "platform-tools"
          yes | sudo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --install "ndk;21.3.6528147"
          ln -s -f $ANDROID_SDK_ROOT/ndk/21.3.6528147 $ANDROID_NDK_ROOT
          echo "$ANDROID_SDK_ROOT" > sdk.txt

      - name: Build app
        working-directory: ../renpy-${{ env.RENPY_VERSION }}-sdk
        env:
          SDL_AUDIODRIVER: dummy
          SDL_VIDEODRIVER: dummy
        run: |
          mkdir -p ${{ github.workspace }}/build
          ./renpy.sh launcher android_build ${{ github.workspace }} assembleRelease --dest ${{ github.workspace }}/build

      - name: Search for apk file
        id: apk
        run: cd build && echo "::set-output name=filename::$(ls *-universal-release.apk)"
      - name: Upload apk as a artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.apk.outputs.filename }}
          path: build/${{ steps.apk.outputs.filename }}
      - name: Upload apks as release assets
        uses: actions/github-script@v4
        env:
          UPLOAD_URL: ${{ github.event.release.upload_url }}
        with:
          script: |
            const fs = require('fs').promises;
            for (const file of await fs.readdir('./build')) {
              console.log('Uploading file', file + '...');
              const flen = await fs.stat(`./build/${file}`).size;
              const conf = { 'content-type': 'application/vnd.android.package-archive', 'content-length': flen };
              await github.repos.uploadReleaseAsset({
                process.env.UPLOAD_URL,
                conf,
                name: file,
                file: await fs.readFile(`./build/${file}`),
              });
            }
