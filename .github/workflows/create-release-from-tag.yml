on:
  push:
    tags:
      - 'dosbox-x-v*'

name: Create Release from tag

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Get needed files (DO NOT USE IN PROD)
        run: |
          wget https://github.com/joncampbell123/dosbox-x/raw/master/CHANGELOG
          mkdir vs2015
          cd vs2015
          wget https://github.com/joncampbell123/dosbox-x/raw/master/vs2015/config_package.h
        
      # FIXME: evaluate (with) something else
      - name: Generate release name from headers
        id: header
        run: |
          echo "#include<stdio.h>">a.c
          echo "#include \"vs2015/config_package.h\"">>a.c
          echo "int main(){">>a.c
          echo "printf(\"::set-output name=version::\" VERSION \"\\n\");">>a.c
          echo "return 0;">>a.c
          echo "}">>a.c
          gcc -o version a.c
          ./version
      # FIXME: python
      - env:
          DOSBOX_VERSION: ${{ steps.header.outputs.version }}
          # NTS: INSTALL.md is ONLY updated after release, so hardcode master
          SIMPLE_TAG: master
        run: |
          import os
          
          SITE = "https://dosbox-x.com"
          WIKI_LOC = SITE + "/wiki"
          CHANGELOG_URL = SITE + "/release-" + os.environ["DOSBOX_VERSION"] + ".html"
          INSTALL_PAGE = "https://github.com/joncampbell123/dosbox-x/blob/" + os.environ["SIMPLE_TAG"] + "/INSTALL.md"

          with open("CHANGELOG.md", "w", encoding="utf-8") as desc:
            desc.write("**Please read the [INSTALL](%s) page for more information about installing DOSBox-X on your system.** Also, always check out the [DOSBox-X homepage](%s) for latest updates.\n\n" % (INSTALL_PAGE, SITE))
            desc.write("You can also see the release notes [here](%s) and the user guide here: [DOSBox-X Wiki](%s)\n\n" % (CHANGELOG_URL, WIKI_LOC))
            with open("CHANGELOG", "r", encoding="utf-8") as changelog:
              def line_iterator(f):
                line = True
                while line:
                  line = f.readline()
                  yield line
                return
              it = line_iterator(changelog)
              next(it) # skip version
              for line in it:
                if line == "\r\n" or not line.startswith("  "):
                  break
                line = line.strip()
                if not line.startswith('-'):
                  desc.seek(desc.tell(), os.SEEK_SET) # assuming last character is \n
                  desc.truncate()
                  print(" ", file=desc, end='')
                else:
                  print("", file=desc, end='\n')
                print(line, file=desc, end='')
        name: Generate release body
        shell: python
      - name: Output proper tag name
        id: tag
        shell: python
        run: |
          import os
          x = os.environ["GITHUB_REF"]
          if x.startswith("refs/tags/"):
            x = x[len("refs/tags/"):]
          print("::set-output name=tag::%s" % x)
        
      - name: Create Release
        uses: ncipollo/release-action@v1.8.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.tag.outputs.tag }}
          commit: ${{ github.sha }}
          allowUpdates: true
          name: DOSBox-X ${{ steps.header.outputs.version }} ${{ github.event.head_commit.timestamp }}
          bodyFile: CHANGELOG.md
          replacesArtifacts: false
      - name: Cancel jobs triggered by tag
        if: always()
        continue-on-error: true
        uses: Dobby233Liu/homebrew-actions/cancel-previous-runs@master
